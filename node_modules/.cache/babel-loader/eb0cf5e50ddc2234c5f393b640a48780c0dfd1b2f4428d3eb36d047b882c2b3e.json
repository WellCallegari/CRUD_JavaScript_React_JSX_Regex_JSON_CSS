{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\components\\\\PersonList.js\";\nimport React from 'react';\nimport PersonCard from './PersonCard';\nimport { deletePerson } from '../services/PersonService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PersonList = ({\n  people,\n  onEdit\n}) => {\n  const handleDelete = id => {\n    const confirmation = window.confirm(\"Você tem certeza que deseja excluir?\");\n    if (confirmation) {\n      deletePerson(id); // Deleta a pessoa\n      // Atualiza a lista após exclusão\n      // Aqui, seria interessante usar setPeople no componente pai (App.js), \n      // mas esse exemplo assume que a lista já é atualizada por meio de estado em App.js\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"person-list\",\n    children: people.map(person => /*#__PURE__*/_jsxDEV(PersonCard, {\n      person: person,\n      onEdit: onEdit,\n      onDelete: handleDelete // Passando a função de deletar para o card\n    }, person.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = PersonList;\nexport default PersonList;\nvar _c;\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"names":["React","PersonCard","deletePerson","jsxDEV","_jsxDEV","PersonList","people","onEdit","handleDelete","id","confirmation","window","confirm","className","children","map","person","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/components/PersonList.js"],"sourcesContent":["import React from 'react';\r\nimport PersonCard from './PersonCard';\r\nimport { deletePerson } from '../services/PersonService';\r\n\r\nconst PersonList = ({ people, onEdit }) => {\r\n  const handleDelete = (id) => {\r\n    const confirmation = window.confirm(\"Você tem certeza que deseja excluir?\");\r\n    if (confirmation) {\r\n      deletePerson(id); // Deleta a pessoa\r\n      // Atualiza a lista após exclusão\r\n      // Aqui, seria interessante usar setPeople no componente pai (App.js), \r\n      // mas esse exemplo assume que a lista já é atualizada por meio de estado em App.js\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"person-list\">\r\n      {people.map((person) => (\r\n        <PersonCard\r\n          key={person.id}\r\n          person={person}\r\n          onEdit={onEdit}\r\n          onDelete={handleDelete} // Passando a função de deletar para o card\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,YAAY,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EACzC,MAAMC,YAAY,GAAIC,EAAE,IAAK;IAC3B,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAAC,sCAAsC,CAAC;IAC3E,IAAIF,YAAY,EAAE;MAChBR,YAAY,CAACO,EAAE,CAAC,CAAC,CAAC;MAClB;MACA;MACA;IACF;EACF,CAAC;EAED,oBACEL,OAAA;IAAKS,SAAS,EAAC,aAAa;IAAAC,QAAA,EACzBR,MAAM,CAACS,GAAG,CAAEC,MAAM,iBACjBZ,OAAA,CAACH,UAAU;MAETe,MAAM,EAAEA,MAAO;MACfT,MAAM,EAAEA,MAAO;MACfU,QAAQ,EAAET,YAAa,CAAC;IAAA,GAHnBQ,MAAM,CAACP,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAvBIjB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}