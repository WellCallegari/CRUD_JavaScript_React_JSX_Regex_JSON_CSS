{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PersonCard from \"./components/PersonCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [people, setPeople] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [message, setMessage] = useState(\"\"); // Para armazenar a mensagem de sucesso\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Para armazenar mensagens de erro\n\n  const handleAddPerson = person => {\n    // Validação dos campos\n    if (!person.name || !person.email || !person.date) {\n      setErrorMessage(\"Todos os campos devem ser preenchidos.\");\n      return;\n    }\n\n    // Validação de e-mail\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    if (!emailRegex.test(person.email)) {\n      setErrorMessage(\"O e-mail informado não é válido.\");\n      return;\n    }\n\n    // Limpar mensagem de erro antes de cadastrar\n    setErrorMessage(\"\");\n\n    // Cadastro de pessoa\n    setPeople([...people, person]);\n    setMessage(\"Pessoa cadastrada com sucesso!\");\n    setIsCreating(false); // Retorna para a tela inicial de opções\n\n    // Limpar a mensagem de sucesso após 3 segundos\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 3000);\n  };\n  const handleShowList = () => {\n    setIsCreating(false); // Vai para a tela de listagem\n    setMessage(\"\"); // Limpa a mensagem de sucesso ou erro\n  };\n  const handleGoBack = () => {\n    setIsCreating(true); // Retorna para o cadastro\n    setMessage(\"\"); // Limpa a mensagem de sucesso ou erro\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Desafio Cadastro de Pessoas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoBack,\n        className: \"create-btn\",\n        disabled: isCreating,\n        children: \"Cadastrar Pessoa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShowList,\n        className: \"list-btn\",\n        disabled: !people.length,\n        children: \"Listar Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this), \" \", errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 24\n    }, this), \" \", isCreating ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastrar Pessoa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PersonCard, {\n        onSave: handleAddPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : people.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), people.map(person => /*#__PURE__*/_jsxDEV(PersonCard, {\n        personToEdit: person,\n        onSave: () => {},\n        setPersonToEdit: () => {},\n        onDelete: () => {}\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"INMJoW2n7a8vtyglET1qqqUAAYs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PersonCard","jsxDEV","_jsxDEV","App","_s","people","setPeople","isCreating","setIsCreating","message","setMessage","errorMessage","setErrorMessage","handleAddPerson","person","name","email","date","emailRegex","test","setTimeout","handleShowList","handleGoBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","onSave","map","personToEdit","setPersonToEdit","onDelete","id","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PersonCard from \"./components/PersonCard\";\n\nfunction App() {\n  const [people, setPeople] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [message, setMessage] = useState(\"\"); // Para armazenar a mensagem de sucesso\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Para armazenar mensagens de erro\n\n  const handleAddPerson = (person) => {\n    // Validação dos campos\n    if (!person.name || !person.email || !person.date) {\n      setErrorMessage(\"Todos os campos devem ser preenchidos.\");\n      return;\n    }\n    \n    // Validação de e-mail\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    if (!emailRegex.test(person.email)) {\n      setErrorMessage(\"O e-mail informado não é válido.\");\n      return;\n    }\n\n    // Limpar mensagem de erro antes de cadastrar\n    setErrorMessage(\"\");\n\n    // Cadastro de pessoa\n    setPeople([...people, person]);\n    setMessage(\"Pessoa cadastrada com sucesso!\");\n    setIsCreating(false); // Retorna para a tela inicial de opções\n\n    // Limpar a mensagem de sucesso após 3 segundos\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 3000);\n  };\n\n  const handleShowList = () => {\n    setIsCreating(false); // Vai para a tela de listagem\n    setMessage(\"\"); // Limpa a mensagem de sucesso ou erro\n  };\n\n  const handleGoBack = () => {\n    setIsCreating(true); // Retorna para o cadastro\n    setMessage(\"\"); // Limpa a mensagem de sucesso ou erro\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Desafio Cadastro de Pessoas</h1>\n      <div className=\"buttons-container\">\n        <button onClick={handleGoBack} className=\"create-btn\" disabled={isCreating}>\n          Cadastrar Pessoa\n        </button>\n        <button onClick={handleShowList} className=\"list-btn\" disabled={!people.length}>\n          Listar Pessoas\n        </button>\n      </div>\n\n      {message && <div className=\"success-message\">{message}</div>} {/* Exibe mensagem de sucesso */}\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>} {/* Exibe mensagem de erro */}\n\n      {isCreating ? (\n        <div className=\"form-container\">\n          <h2>Cadastrar Pessoa</h2>\n          <PersonCard onSave={handleAddPerson} />\n        </div>\n      ) : (\n        people.length > 0 && (\n          <div className=\"list-container\">\n            <h2>Lista de Pessoas</h2>\n            {people.map((person) => (\n              <PersonCard\n                key={person.id}\n                personToEdit={person}\n                onSave={() => {}}\n                setPersonToEdit={() => {}}\n                onDelete={() => {}}\n              />\n            ))}\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}