{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/App.css';\nimport PersonList from './components/PersonList';\nimport PersonForm from './components/PersonForm';\nimport { fetchPeople, deletePerson, savePerson } from './services/PersonService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [people, setPeople] = useState([]);\n  const [currentPerson, setCurrentPerson] = useState(null);\n  useEffect(() => {\n    setPeople(fetchPeople()); // Carrega as pessoas\n  }, []);\n  const handleEdit = person => {\n    setCurrentPerson(person); // Preenche o formulário com os dados da pessoa\n  };\n  const handleDelete = id => {\n    deletePerson(id); // Remove a pessoa do \"banco de dados\" (mock)\n    setPeople(fetchPeople()); // Atualiza o estado da lista\n  };\n  const handleSave = person => {\n    savePerson(person); // Adiciona ou atualiza a pessoa\n    setPeople(fetchPeople()); // Atualiza a lista com a pessoa adicionada ou editada\n    setCurrentPerson(null); // Reseta a pessoa em edição\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastro de Pessoas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      person: currentPerson,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonList, {\n      people: people,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"S5I0S/WgwqtuLq+SBk/KFeydhXs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PersonList","PersonForm","fetchPeople","deletePerson","savePerson","jsxDEV","_jsxDEV","App","_s","people","setPeople","currentPerson","setCurrentPerson","handleEdit","person","handleDelete","id","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles/App.css';\nimport PersonList from './components/PersonList';\nimport PersonForm from './components/PersonForm';\nimport { fetchPeople, deletePerson, savePerson } from './services/PersonService';\n\nfunction App() {\n  const [people, setPeople] = useState([]);\n  const [currentPerson, setCurrentPerson] = useState(null);\n\n  useEffect(() => {\n    setPeople(fetchPeople()); // Carrega as pessoas\n  }, []);\n\n  const handleEdit = (person) => {\n    setCurrentPerson(person); // Preenche o formulário com os dados da pessoa\n  };\n\n  const handleDelete = (id) => {\n    deletePerson(id); // Remove a pessoa do \"banco de dados\" (mock)\n    setPeople(fetchPeople()); // Atualiza o estado da lista\n  };\n\n  const handleSave = (person) => {\n    savePerson(person); // Adiciona ou atualiza a pessoa\n    setPeople(fetchPeople()); // Atualiza a lista com a pessoa adicionada ou editada\n    setCurrentPerson(null); // Reseta a pessoa em edição\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Cadastro de Pessoas</h1>\n      <PersonForm person={currentPerson} onSave={handleSave} />\n      <PersonList people={people} onEdit={handleEdit} onDelete={handleDelete} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AACzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,WAAW,EAAEC,YAAY,EAAEC,UAAU,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACdW,SAAS,CAACR,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,UAAU,GAAIC,MAAM,IAAK;IAC7BF,gBAAgB,CAACE,MAAM,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAIC,EAAE,IAAK;IAC3Bb,YAAY,CAACa,EAAE,CAAC,CAAC,CAAC;IAClBN,SAAS,CAACR,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMe,UAAU,GAAIH,MAAM,IAAK;IAC7BV,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC;IACpBJ,SAAS,CAACR,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1BU,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACEN,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BjB,OAAA,CAACL,UAAU;MAACa,MAAM,EAAEH,aAAc;MAACa,MAAM,EAAEP;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDjB,OAAA,CAACN,UAAU;MAACS,MAAM,EAAEA,MAAO;MAACgB,MAAM,EAAEZ,UAAW;MAACa,QAAQ,EAAEX;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV;AAACf,EAAA,CA9BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}