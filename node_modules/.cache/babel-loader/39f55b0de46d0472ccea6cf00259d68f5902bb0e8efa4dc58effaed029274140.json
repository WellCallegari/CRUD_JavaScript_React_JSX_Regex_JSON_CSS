{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\components\\\\PersonCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PersonCard({\n  onSave,\n  personToEdit,\n  setPersonToEdit\n}) {\n  _s();\n  const [person, setPerson] = useState({\n    name: \"\",\n    email: \"\",\n    date: \"\"\n  });\n  useEffect(() => {\n    if (personToEdit) {\n      setPerson(personToEdit); // Preenche o formulário com os dados da pessoa a ser editada\n    } else {\n      setPerson({\n        name: \"\",\n        email: \"\",\n        date: \"\"\n      }); // Limpa os campos para criação\n    }\n  }, [personToEdit]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPerson({\n      ...person,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSave(person); // Salva ou atualiza a pessoa\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Nome\",\n        value: person.name,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"E-mail\",\n        value: person.email,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        placeholder: \"Data de Nascimento\",\n        value: person.date,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: personToEdit ? \"Salvar Edição\" : \"Criar Pessoa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), personToEdit && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setPersonToEdit(null),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(PersonCard, \"TlkmQUo/zqK8tDrFbqW31+s5mEU=\");\n_c = PersonCard;\nexport default PersonCard;\nvar _c;\n$RefreshReg$(_c, \"PersonCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PersonCard","onSave","personToEdit","setPersonToEdit","_s","person","setPerson","name","email","date","handleInputChange","e","value","target","handleSubmit","preventDefault","children","onSubmit","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/components/PersonCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction PersonCard({ onSave, personToEdit, setPersonToEdit }) {\r\n  const [person, setPerson] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (personToEdit) {\r\n      setPerson(personToEdit); // Preenche o formulário com os dados da pessoa a ser editada\r\n    } else {\r\n      setPerson({ name: \"\", email: \"\", date: \"\" }); // Limpa os campos para criação\r\n    }\r\n  }, [personToEdit]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPerson({ ...person, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSave(person); // Salva ou atualiza a pessoa\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Nome\"\r\n          value={person.name}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"E-mail\"\r\n          value={person.email}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          placeholder=\"Data de Nascimento\"\r\n          value={person.date}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">{personToEdit ? \"Salvar Edição\" : \"Criar Pessoa\"}</button>\r\n        {personToEdit && (\r\n          <button type=\"button\" onClick={() => setPersonToEdit(null)}>\r\n            Cancelar\r\n          </button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}