{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getAllPeople, addPerson } from \"./services/PersonService\"; // Remover update e delete\nimport PersonList from \"./components/PersonList\";\nimport PersonCard from \"./components/PersonCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [people, setPeople] = useState([]);\n  const [showEditForm, setShowEditForm] = useState(false); // Apenas controle para mostrar/ocultar o formulário\n\n  // Carregar as pessoas ao montar o componente\n  useEffect(() => {\n    const peopleData = getAllPeople();\n    setPeople(peopleData);\n  }, []);\n\n  // Função para adicionar nova pessoa\n  const handleSavePerson = person => {\n    addPerson(person);\n    setPeople(getAllPeople());\n    setShowEditForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastro de Pessoas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonList, {\n      people: people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonCard, {\n      onSave: handleSavePerson,\n      showEditForm: showEditForm,\n      setShowEditForm: setShowEditForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-person-button\",\n      onClick: () => setShowEditForm(true) // Exibe o formulário para criar nova pessoa\n      ,\n      children: \"Criar Pessoa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OSX6FxXLpAiwUUZsMDXF0YQyjR4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getAllPeople","addPerson","PersonList","PersonCard","jsxDEV","_jsxDEV","App","_s","people","setPeople","showEditForm","setShowEditForm","peopleData","handleSavePerson","person","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onClick","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getAllPeople, addPerson } from \"./services/PersonService\"; // Remover update e delete\nimport PersonList from \"./components/PersonList\";\nimport PersonCard from \"./components/PersonCard\";\n\nfunction App() {\n  const [people, setPeople] = useState([]);\n  const [showEditForm, setShowEditForm] = useState(false); // Apenas controle para mostrar/ocultar o formulário\n\n  // Carregar as pessoas ao montar o componente\n  useEffect(() => {\n    const peopleData = getAllPeople();\n    setPeople(peopleData);\n  }, []);\n\n  // Função para adicionar nova pessoa\n  const handleSavePerson = (person) => {\n    addPerson(person);\n    setPeople(getAllPeople());\n    setShowEditForm(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Cadastro de Pessoas</h1>\n      <PersonList people={people} />\n      \n      {/* Formulário de criação de nova pessoa */}\n      <PersonCard onSave={handleSavePerson} showEditForm={showEditForm} setShowEditForm={setShowEditForm} />\n      \n      {/* Botão para criar nova pessoa */}\n      <button\n        className=\"add-person-button\"\n        onClick={() => setShowEditForm(true)} // Exibe o formulário para criar nova pessoa\n      >\n        Criar Pessoa\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,QAAQ,0BAA0B,CAAC,CAAC;AACpE,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGZ,YAAY,CAAC,CAAC;IACjCS,SAAS,CAACG,UAAU,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;IACnCb,SAAS,CAACa,MAAM,CAAC;IACjBL,SAAS,CAACT,YAAY,CAAC,CAAC,CAAC;IACzBW,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACEN,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBX,OAAA;MAAAW,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bf,OAAA,CAACH,UAAU;MAACM,MAAM,EAAEA;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG9Bf,OAAA,CAACF,UAAU;MAACkB,MAAM,EAAER,gBAAiB;MAACH,YAAY,EAAEA,YAAa;MAACC,eAAe,EAAEA;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGtGf,OAAA;MACEU,SAAS,EAAC,mBAAmB;MAC7BO,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAAC,IAAI,CAAE,CAAC;MAAA;MAAAK,QAAA,EACvC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACb,EAAA,CAlCQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}