{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\Final\\\\2\\\\crud-pessoas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Modal from './components/Modal';\n\n// Função para gerar uma cor aleatória em formato hex\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\n// Função para converter de hex para RGBA e adicionar opacidade\nconst hexToRgba = (hex, opacity = 0.100) => {\n  hex = hex.replace('#', '');\n\n  // Extrai os valores de R, G e B\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n\n  // Retorna a cor no formato rgba\n  return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n};\nconst App = () => {\n  _s();\n  const [people, setPeople] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [showList, setShowList] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    birthdate: '',\n    id: null\n  });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false); // Controla o estado do modal\n  const [personToDelete, setPersonToDelete] = useState(null); // Pessoa a ser deletada\n\n  // Função de validação\n  const validateForm = () => {\n    let formErrors = {};\n    const {\n      name,\n      email,\n      birthdate\n    } = formData;\n    if (!name) formErrors.name = 'Nome é obrigatório!';\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) formErrors.email = 'E-mail inválido!';\n    if (!birthdate) formErrors.birthdate = 'Data de nascimento é obrigatória!';\n    return formErrors;\n  };\n\n  // Função para lidar com o envio do formulário\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length === 0) {\n      const randomColor = generateRandomColor();\n      const colorWithOpacity = hexToRgba(randomColor, 0.5);\n      if (formData.id) {\n        // Caso tenha ID, estamos editando a pessoa\n        const updatedPeople = people.map(person => person.id === formData.id ? {\n          ...formData\n        } : person);\n        setPeople(updatedPeople);\n        setShowList(true); // Vai para a lista\n        setShowForm(false);\n      } else {\n        // Caso não tenha ID, estamos cadastrando uma nova pessoa\n        setPeople([...people, {\n          ...formData,\n          id: Date.now(),\n          color: colorWithOpacity\n        }]);\n        setSuccessMessage('Pessoa cadastrada com sucesso!');\n        setTimeout(() => setSuccessMessage(''), 3000); // Limpa a mensagem após 3 segundos\n        setFormData({\n          name: '',\n          email: '',\n          birthdate: '',\n          id: null\n        });\n      }\n      setErrors({}); // Limpa os erros após o envio bem-sucedido\n    } else {\n      setErrors(validationErrors); // Exibe os erros\n    }\n  };\n\n  // Função para manipular as mudanças no formulário\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Função para exibir a lista de pessoas\n  const handleList = () => {\n    setShowList(true);\n    setShowForm(false);\n    setErrors({}); // Limpar os erros ao navegar para a lista\n  };\n\n  // Função para exibir o formulário de cadastro\n  const handleCreate = () => {\n    setShowForm(true);\n    setShowList(false);\n    setFormData({\n      name: '',\n      email: '',\n      birthdate: '',\n      id: null\n    });\n    setErrors({}); // Limpar os erros ao criar um novo cadastro\n  };\n\n  // Função para editar a pessoa\n  const handleEdit = id => {\n    const personToEdit = people.find(person => person.id === id);\n    setFormData({\n      ...personToEdit\n    });\n    setShowForm(true);\n    setShowList(false);\n    setErrors({}); // Limpar os erros ao editar uma pessoa\n  };\n\n  // Função para abrir o modal de exclusão\n  const handleDelete = id => {\n    setPersonToDelete(id);\n    setIsModalOpen(true); // Abre o modal de confirmação\n  };\n\n  // Função para confirmar a exclusão\n  const confirmDelete = () => {\n    if (personToDelete) {\n      setPeople(people.filter(person => person.id !== personToDelete));\n      setIsModalOpen(false);\n      setPersonToDelete(null);\n    }\n  };\n\n  // Função para cancelar a exclusão\n  const cancelDelete = () => {\n    setIsModalOpen(false);\n    setPersonToDelete(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"animated-title\",\n        children: \"Desafio Front-end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"animated-subtitle\",\n        children: \"Cadastro e listagem de pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        className: \"create-btn\",\n        children: \"Novo Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleList,\n        className: \"list-btn\",\n        children: \"Ver Lista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 26\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: formData.id ? 'Editar Pessoa' : 'Cadastrar Pessoa'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nome:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-balloon\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"E-mail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-balloon\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data de Nascimento:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"birthdate\",\n            value: formData.birthdate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), errors.birthdate && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-balloon\",\n            children: errors.birthdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"create-btn\",\n          children: formData.id ? 'Atualizar' : 'Cadastrar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), showList && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), people.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"N\\xE3o h\\xE1 pessoas cadastradas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-wrapper\",\n        children: people.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            backgroundColor: person.color\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: person.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: person.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(person.birthdate + 'T00:00:00').toLocaleDateString('pt-BR')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-btn-space\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-btn\",\n              onClick: () => handleEdit(person.id),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: () => handleDelete(person.id),\n              children: \"Excluir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this)]\n        }, person.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: cancelDelete,\n      onConfirm: confirmDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"h0IsZKRnfZHNcJ//quazQcZOGS4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","generateRandomColor","letters","color","i","Math","floor","random","hexToRgba","hex","opacity","replace","r","parseInt","substring","g","b","App","_s","people","setPeople","showForm","setShowForm","showList","setShowList","formData","setFormData","name","email","birthdate","id","errors","setErrors","successMessage","setSuccessMessage","isModalOpen","setIsModalOpen","personToDelete","setPersonToDelete","validateForm","formErrors","test","handleSubmit","e","preventDefault","validationErrors","Object","keys","length","randomColor","colorWithOpacity","updatedPeople","map","person","Date","now","setTimeout","handleChange","value","target","prevData","handleList","handleCreate","handleEdit","personToEdit","find","handleDelete","confirmDelete","filter","cancelDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","style","backgroundColor","toLocaleDateString","isOpen","onClose","onConfirm","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/Final/2/crud-pessoas/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Modal from './components/Modal';\n\n// Função para gerar uma cor aleatória em formato hex\nconst generateRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\n// Função para converter de hex para RGBA e adicionar opacidade\nconst hexToRgba = (hex, opacity = 0.100) => {\n  hex = hex.replace('#', '');\n\n  // Extrai os valores de R, G e B\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n\n  // Retorna a cor no formato rgba\n  return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n};\nconst App = () => {\n  const [people, setPeople] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [showList, setShowList] = useState(false);\n  const [formData, setFormData] = useState({ name: '', email: '', birthdate: '', id: null });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');const [isModalOpen, setIsModalOpen] = useState(false);  // Controla o estado do modal\n  const [personToDelete, setPersonToDelete] = useState(null); // Pessoa a ser deletada\n\n\n  // Função de validação\n  const validateForm = () => {\n    let formErrors = {};\n    const { name, email, birthdate } = formData;\n\n    if (!name) formErrors.name = 'Nome é obrigatório!';\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) formErrors.email = 'E-mail inválido!';\n    if (!birthdate) formErrors.birthdate = 'Data de nascimento é obrigatória!';\n\n    return formErrors;\n  };\n\n  // Função para lidar com o envio do formulário\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const validationErrors = validateForm();\n\n    if (Object.keys(validationErrors).length === 0) {      \n      const randomColor = generateRandomColor();\n      const colorWithOpacity = hexToRgba(randomColor, 0.5);\n      if (formData.id) {\n        // Caso tenha ID, estamos editando a pessoa\n        const updatedPeople = people.map((person) =>\n          person.id === formData.id ? { ...formData } : person\n        );\n        setPeople(updatedPeople);\n        setShowList(true); // Vai para a lista\n        setShowForm(false);\n      } else {\n        // Caso não tenha ID, estamos cadastrando uma nova pessoa\n        setPeople([...people, { ...formData, id: Date.now(), color: colorWithOpacity }]);\n        setSuccessMessage('Pessoa cadastrada com sucesso!');\n        setTimeout(() => setSuccessMessage(''), 3000); // Limpa a mensagem após 3 segundos\n        setFormData({ name: '', email: '', birthdate: '', id: null });\n      }\n      setErrors({}); // Limpa os erros após o envio bem-sucedido\n    } else {\n      setErrors(validationErrors); // Exibe os erros\n    }\n  };\n\n  // Função para manipular as mudanças no formulário\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  // Função para exibir a lista de pessoas\n  const handleList = () => {\n    setShowList(true);\n    setShowForm(false);\n    setErrors({}); // Limpar os erros ao navegar para a lista\n  };\n\n  // Função para exibir o formulário de cadastro\n  const handleCreate = () => {\n    setShowForm(true);\n    setShowList(false);\n    setFormData({ name: '', email: '', birthdate: '', id: null });\n    setErrors({}); // Limpar os erros ao criar um novo cadastro\n  };\n\n  // Função para editar a pessoa\n  const handleEdit = (id) => {\n    const personToEdit = people.find((person) => person.id === id);\n    setFormData({ ...personToEdit });\n    setShowForm(true);\n    setShowList(false);\n    setErrors({}); // Limpar os erros ao editar uma pessoa\n  };\n\n  // Função para abrir o modal de exclusão\n  const handleDelete = (id) => {\n    setPersonToDelete(id);\n    setIsModalOpen(true);  // Abre o modal de confirmação\n  };\n\n  // Função para confirmar a exclusão\n  const confirmDelete = () => {\n    if (personToDelete) {\n      setPeople(people.filter((person) => person.id !== personToDelete));\n      setIsModalOpen(false);\n      setPersonToDelete(null);\n    }\n  };\n\n  // Função para cancelar a exclusão\n  const cancelDelete = () => {\n    setIsModalOpen(false);\n    setPersonToDelete(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header-container\">\n        <h1 className=\"animated-title\">Desafio Front-end</h1>\n        <p className=\"animated-subtitle\">Cadastro e listagem de pessoas</p>\n      </div>\n\n      <div className=\"buttons-container\">\n        <button onClick={handleCreate} className=\"create-btn\">\n          Novo Cadastro\n        </button>\n        <button onClick={handleList} className=\"list-btn\">\n          Ver Lista\n        </button>\n      </div>\n\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\n\n      {showForm && (\n        <div className=\"form-container\">\n          <h2>{formData.id ? 'Editar Pessoa' : 'Cadastrar Pessoa'}</h2>\n          <form onSubmit={handleSubmit}>\n            <div className=\"input-container\">\n              <label>Nome:</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n              />\n              {errors.name && <div className=\"error-balloon\">{errors.name}</div>}\n            </div>\n            <div className=\"input-container\">\n              <label>E-mail:</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n              />\n              {errors.email && <div className=\"error-balloon\">{errors.email}</div>}\n            </div>\n            <div className=\"input-container\">\n              <label>Data de Nascimento:</label>\n              <input\n                type=\"date\"\n                name=\"birthdate\"\n                value={formData.birthdate}\n                onChange={handleChange}\n              />\n              {errors.birthdate && <div className=\"error-balloon\">{errors.birthdate}</div>}\n            </div>\n            <button type=\"submit\" className=\"create-btn\">\n              {formData.id ? 'Atualizar' : 'Cadastrar'}\n            </button>\n          </form>\n        </div>\n      )}\n\n      {showList && (\n        <div className=\"list-container\">\n          <h2>Lista de Pessoas</h2>\n          {people.length === 0 ? (\n            <p>Não há pessoas cadastradas.</p>\n          ) : (\n            <div className=\"cards-wrapper\">\n              {people.map((person) => (\n                <div\n                  key={person.id}\n                  className=\"card\"\n                  style={{ backgroundColor: person.color }}\n                >\n                  <p><strong>{person.name}</strong></p>\n                  <p>{person.email}</p>\n                  <p>{new Date(person.birthdate + 'T00:00:00').toLocaleDateString('pt-BR')}</p>\n                    <div className=\"card-btn-space\">\n                      <button className=\"save-btn\" onClick={() => handleEdit(person.id)}>Editar</button>\n                      <button className=\"cancel-btn\" onClick={() => handleDelete(person.id)}>Excluir</button>\n                    </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Modal de confirmação de exclusão */}\n      <Modal\n        isOpen={isModalOpen}\n        onClose={cancelDelete}\n        onConfirm={confirmDelete}\n      />\n\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}