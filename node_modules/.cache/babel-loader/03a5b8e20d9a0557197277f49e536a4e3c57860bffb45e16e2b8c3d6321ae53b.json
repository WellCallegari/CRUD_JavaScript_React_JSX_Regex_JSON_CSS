{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [people, setPeople] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [showList, setShowList] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    birthdate: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const validateForm = () => {\n    let formErrors = {};\n    const {\n      name,\n      email,\n      birthdate\n    } = formData;\n    if (!name) formErrors.name = 'Nome é obrigatório!';\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) formErrors.email = 'E-mail inválido!';\n    if (!birthdate) formErrors.birthdate = 'Data de nascimento é obrigatória!';\n    return formErrors;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length === 0) {\n      if (formData.id) {\n        // Edita a pessoa existente\n        const updatedPeople = people.map(person => person.id === formData.id ? {\n          ...formData\n        } : person);\n        setPeople(updatedPeople);\n        setSuccessMessage('Pessoa editada com sucesso!');\n        setIsEditing(false);\n\n        // Exibe a mensagem de sucesso e volta para a lista após 3 segundos\n        setTimeout(() => {\n          setShowForm(false);\n          setShowList(true);\n          setSuccessMessage('');\n        }, 3000);\n      } else {\n        // Cria uma nova pessoa\n        setPeople([...people, {\n          ...formData,\n          id: Date.now()\n        }]);\n        setSuccessMessage('Pessoa cadastrada com sucesso!');\n        setIsEditing(false);\n\n        // A mensagem de sucesso permanece enquanto estiver na tela de cadastro\n        setTimeout(() => setSuccessMessage(''), 3000);\n      }\n      setFormData({\n        name: '',\n        email: '',\n        birthdate: ''\n      });\n      setErrors({});\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleList = () => {\n    setShowList(true);\n    setShowForm(false);\n  };\n  const handleCreate = () => {\n    setShowForm(true);\n    setShowList(false);\n    setIsEditing(false);\n  };\n  const handleEdit = id => {\n    const personToEdit = people.find(person => person.id === id);\n    setFormData({\n      ...personToEdit\n    });\n    setShowForm(true);\n    setShowList(false);\n    setIsEditing(true);\n  };\n  const handleDelete = id => {\n    const confirmDelete = window.confirm('Tem certeza que deseja excluir?');\n    if (confirmDelete) {\n      setPeople(people.filter(person => person.id !== id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Desafio Cadastro de Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-btn\",\n        onClick: handleCreate,\n        children: \"Cadastrar Pessoa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"list-btn\",\n        onClick: handleList,\n        children: \"Listar Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isEditing ? 'Editar Pessoa' : 'Cadastrar Pessoa'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nome:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-balloon\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"E-mail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-balloon\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data de Nascimento:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"birthdate\",\n            value: formData.birthdate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), errors.birthdate && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-balloon\",\n            children: errors.birthdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\",\n          type: \"submit\",\n          children: isEditing ? 'Salvar' : 'Cadastrar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), showList && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), people.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"N\\xE3o h\\xE1 pessoas cadastradas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this) : people.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: person.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formatDateToBR(person.birthdate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: () => handleEdit(person.id),\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: () => handleDelete(person.id),\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)]\n      }, person.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8StSueG9Lwaw2AOO5/b55cP7D6Q=\");\n_c = App;\nconst formatDateToBR = dateString => {\n  const date = new Date(dateString);\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}/${month}/${year}`;\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","people","setPeople","showForm","setShowForm","showList","setShowList","formData","setFormData","name","email","birthdate","errors","setErrors","successMessage","setSuccessMessage","isEditing","setIsEditing","validateForm","formErrors","test","handleSubmit","e","preventDefault","validationErrors","Object","keys","length","id","updatedPeople","map","person","setTimeout","Date","now","handleChange","value","target","prevData","handleList","handleCreate","handleEdit","personToEdit","find","handleDelete","confirmDelete","window","confirm","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","formatDateToBR","_c","dateString","date","day","String","getDate","padStart","month","getMonth","year","getFullYear","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [showList, setShowList] = useState(false);\n  const [formData, setFormData] = useState({ name: '', email: '', birthdate: '' });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n\n  const validateForm = () => {\n    let formErrors = {};\n    const { name, email, birthdate } = formData;\n\n    if (!name) formErrors.name = 'Nome é obrigatório!';\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) formErrors.email = 'E-mail inválido!';\n    if (!birthdate) formErrors.birthdate = 'Data de nascimento é obrigatória!';\n\n    return formErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n\n    if (Object.keys(validationErrors).length === 0) {\n      if (formData.id) {\n        // Edita a pessoa existente\n        const updatedPeople = people.map((person) =>\n          person.id === formData.id ? { ...formData } : person\n        );\n        setPeople(updatedPeople);\n        setSuccessMessage('Pessoa editada com sucesso!');\n        setIsEditing(false);\n\n        // Exibe a mensagem de sucesso e volta para a lista após 3 segundos\n        setTimeout(() => {\n          setShowForm(false);\n          setShowList(true);\n          setSuccessMessage('');\n        }, 3000);\n      } else {\n        // Cria uma nova pessoa\n        setPeople([...people, { ...formData, id: Date.now() }]);\n        setSuccessMessage('Pessoa cadastrada com sucesso!');\n        setIsEditing(false);\n\n        // A mensagem de sucesso permanece enquanto estiver na tela de cadastro\n        setTimeout(() => setSuccessMessage(''), 3000);\n      }\n\n      setFormData({ name: '', email: '', birthdate: '' });\n      setErrors({});\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const handleList = () => {\n    setShowList(true);\n    setShowForm(false);\n  };\n\n  const handleCreate = () => {\n    setShowForm(true);\n    setShowList(false);\n    setIsEditing(false);\n  };\n\n  const handleEdit = (id) => {\n    const personToEdit = people.find((person) => person.id === id);\n    setFormData({ ...personToEdit });\n    setShowForm(true);\n    setShowList(false);\n    setIsEditing(true);\n  };\n\n  const handleDelete = (id) => {\n    const confirmDelete = window.confirm('Tem certeza que deseja excluir?');\n    if (confirmDelete) {\n      setPeople(people.filter((person) => person.id !== id));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header-container\">\n        <h1>Desafio Cadastro de Pessoas</h1>\n      </div>\n\n      <div className=\"buttons-container\">\n        <button className=\"create-btn\" onClick={handleCreate}>Cadastrar Pessoa</button>\n        <button className=\"list-btn\" onClick={handleList}>Listar Pessoas</button>\n      </div>\n\n      {showForm && (\n        <div className=\"form-container\">\n          <h2>{isEditing ? 'Editar Pessoa' : 'Cadastrar Pessoa'}</h2>\n          {successMessage && (\n            <div className=\"success-message\">{successMessage}</div>\n          )}\n          {!isEditing && (\n            <form onSubmit={handleSubmit}>\n              <div className=\"input-container\">\n                <label>Nome:</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                />\n                {errors.name && <div className=\"error-balloon\">{errors.name}</div>}\n              </div>\n\n              <div className=\"input-container\">\n                <label>E-mail:</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                />\n                {errors.email && <div className=\"error-balloon\">{errors.email}</div>}\n              </div>\n\n              <div className=\"input-container\">\n                <label>Data de Nascimento:</label>\n                <input\n                  type=\"date\"\n                  name=\"birthdate\"\n                  value={formData.birthdate}\n                  onChange={handleChange}\n                />\n                {errors.birthdate && <div className=\"error-balloon\">{errors.birthdate}</div>}\n              </div>\n\n              <button className=\"submit-btn\" type=\"submit\">{isEditing ? 'Salvar' : 'Cadastrar'}</button>\n            </form>\n          )}\n        </div>\n      )}\n\n      {showList && (\n        <div className=\"list-container\">\n          <h2>Lista de Pessoas</h2>\n          {people.length === 0 ? (\n            <p>Não há pessoas cadastradas.</p>\n          ) : (\n            people.map((person) => (\n              <div key={person.id} className=\"card\">\n                <p><strong>{person.name}</strong></p>\n                <p>{person.email}</p>\n                <p>{formatDateToBR(person.birthdate)}</p>\n                <button className=\"save-btn\" onClick={() => handleEdit(person.id)}>Editar</button>\n                <button className=\"cancel-btn\" onClick={() => handleDelete(person.id)}>Excluir</button>\n              </div>\n            ))\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst formatDateToBR = (dateString) => {\n  const date = new Date(dateString);\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}/${month}/${year}`;\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}