{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PersonCard from \"./components/PersonCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [people, setPeople] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [message, setMessage] = useState(\"\"); // Para armazenar a mensagem de sucesso\n\n  const handleAddPerson = person => {\n    setPeople([...people, person]);\n    setMessage(\"Pessoa cadastrada com sucesso!\"); // Exibe a mensagem de sucesso\n    setIsCreating(false); // Volta para a tela inicial ap贸s cadastrar\n    setTimeout(() => {\n      setMessage(\"\"); // Limpa a mensagem ap贸s 3 segundos\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Desafio Cadastro de Pessoas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsCreating(true),\n        className: \"create-btn\",\n        children: \"Cadastrar Pessoa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsCreating(false),\n        className: \"list-btn\",\n        children: \"Listar Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this), \" \", isCreating ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastrar Pessoa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PersonCard, {\n        onSave: handleAddPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : people.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), people.map(person => /*#__PURE__*/_jsxDEV(PersonCard, {\n        personToEdit: person,\n        onSave: () => {},\n        setPersonToEdit: () => {},\n        onDelete: () => {}\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qX+AxXUT6y6RjSU1MxnyNm5FCZs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PersonCard","jsxDEV","_jsxDEV","App","_s","people","setPeople","isCreating","setIsCreating","message","setMessage","handleAddPerson","person","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSave","length","map","personToEdit","setPersonToEdit","onDelete","id","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PersonCard from \"./components/PersonCard\";\n\nfunction App() {\n  const [people, setPeople] = useState([]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [message, setMessage] = useState(\"\"); // Para armazenar a mensagem de sucesso\n\n  const handleAddPerson = (person) => {\n    setPeople([...people, person]);\n    setMessage(\"Pessoa cadastrada com sucesso!\"); // Exibe a mensagem de sucesso\n    setIsCreating(false); // Volta para a tela inicial ap贸s cadastrar\n    setTimeout(() => {\n      setMessage(\"\"); // Limpa a mensagem ap贸s 3 segundos\n    }, 3000);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Desafio Cadastro de Pessoas</h1>\n      <div className=\"buttons-container\">\n        <button onClick={() => setIsCreating(true)} className=\"create-btn\">\n          Cadastrar Pessoa\n        </button>\n        <button onClick={() => setIsCreating(false)} className=\"list-btn\">\n          Listar Pessoas\n        </button>\n      </div>\n\n      {message && <div className=\"success-message\">{message}</div>} {/* Exibe mensagem de sucesso */}\n\n      {isCreating ? (\n        <div className=\"form-container\">\n          <h2>Cadastrar Pessoa</h2>\n          <PersonCard onSave={handleAddPerson} />\n        </div>\n      ) : (\n        people.length > 0 && (\n          <div className=\"list-container\">\n            <h2>Lista de Pessoas</h2>\n            {people.map((person) => (\n              <PersonCard\n                key={person.id}\n                personToEdit={person}\n                onSave={() => {}}\n                setPersonToEdit={() => {}}\n                onDelete={() => {}}\n              />\n            ))}\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}