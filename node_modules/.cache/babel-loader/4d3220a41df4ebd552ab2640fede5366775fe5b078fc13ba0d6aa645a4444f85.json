{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\components\\\\PersonForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PersonForm = ({\n  onAdd\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [birthDate, setBirthDate] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name && email && birthDate) {\n      const newPerson = {\n        name,\n        email,\n        birthDate\n      };\n      onAdd(newPerson); // Chama a função onAdd, passando os dados da nova pessoa\n      setName('');\n      setEmail('');\n      setBirthDate('');\n    } else {\n      alert('Preencha todos os campos.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nome\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"E-mail\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Data de nascimento\",\n      value: birthDate,\n      onChange: e => setBirthDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Criar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(PersonForm, \"a1G+di3HHtOIN6Ng0cU6mtspf3U=\");\n_c = PersonForm;\nexport default PersonForm;\nvar _c;\n$RefreshReg$(_c, \"PersonForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PersonForm","onAdd","_s","name","setName","email","setEmail","birthDate","setBirthDate","handleSubmit","e","preventDefault","newPerson","alert","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/components/PersonForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PersonForm = ({ onAdd }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [birthDate, setBirthDate] = useState('');\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name && email && birthDate) {\r\n      const newPerson = { \r\n        name,\r\n        email,\r\n        birthDate,\r\n      };\r\n\r\n      onAdd(newPerson);  // Chama a função onAdd, passando os dados da nova pessoa\r\n      setName('');\r\n      setEmail('');\r\n      setBirthDate('');\r\n    } else {\r\n      alert('Preencha todos os campos.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Nome\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"E-mail\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        placeholder=\"Data de nascimento\"\r\n        value={birthDate}\r\n        onChange={(e) => setBirthDate(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Criar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIR,IAAI,IAAIE,KAAK,IAAIE,SAAS,EAAE;MAC9B,MAAMK,SAAS,GAAG;QAChBT,IAAI;QACJE,KAAK;QACLE;MACF,CAAC;MAEDN,KAAK,CAACW,SAAS,CAAC,CAAC,CAAE;MACnBR,OAAO,CAAC,EAAE,CAAC;MACXE,QAAQ,CAAC,EAAE,CAAC;MACZE,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,MAAM;MACLK,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,oBACEd,OAAA;IAAMe,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAC3BhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAEf,IAAK;MACZgB,QAAQ,EAAGT,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACU,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFzB,OAAA;MACEiB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAEb,KAAM;MACbc,QAAQ,EAAGT,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACU,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFzB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAEX,SAAU;MACjBY,QAAQ,EAAGT,CAAC,IAAKF,YAAY,CAACE,CAAC,CAACU,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFzB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAACtB,EAAA,CA/CIF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAiDhB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}