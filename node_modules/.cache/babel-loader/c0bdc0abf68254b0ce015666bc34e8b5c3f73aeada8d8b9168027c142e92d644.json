{"ast":null,"code":"let people = [];\nlet currentId = 1;\n\n// Obter todas as pessoas\nexport const getAllPeople = () => people;\n\n// Adicionar nova pessoa\nexport const addPerson = person => {\n  person.id = currentId++;\n  people.push(person);\n};\n\n// Atualizar pessoa\nexport const updatePerson = updatedPerson => {\n  const index = people.findIndex(p => p.id === updatedPerson.id);\n  if (index !== -1) {\n    people[index] = updatedPerson;\n  }\n};\n\n// Deletar pessoa\nexport const deletePerson = id => {\n  people = people.filter(person => person.id !== id);\n};","map":{"version":3,"names":["people","currentId","getAllPeople","addPerson","person","id","push","updatePerson","updatedPerson","index","findIndex","p","deletePerson","filter"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/services/PersonService.js"],"sourcesContent":["let people = [];\r\nlet currentId = 1;\r\n\r\n// Obter todas as pessoas\r\nexport const getAllPeople = () => people;\r\n\r\n// Adicionar nova pessoa\r\nexport const addPerson = (person) => {\r\n  person.id = currentId++;\r\n  people.push(person);\r\n};\r\n\r\n// Atualizar pessoa\r\nexport const updatePerson = (updatedPerson) => {\r\n  const index = people.findIndex((p) => p.id === updatedPerson.id);\r\n  if (index !== -1) {\r\n    people[index] = updatedPerson;\r\n  }\r\n};\r\n\r\n// Deletar pessoa\r\nexport const deletePerson = (id) => {\r\n  people = people.filter((person) => person.id !== id);\r\n};"],"mappings":"AAAA,IAAIA,MAAM,GAAG,EAAE;AACf,IAAIC,SAAS,GAAG,CAAC;;AAEjB;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAMF,MAAM;;AAExC;AACA,OAAO,MAAMG,SAAS,GAAIC,MAAM,IAAK;EACnCA,MAAM,CAACC,EAAE,GAAGJ,SAAS,EAAE;EACvBD,MAAM,CAACM,IAAI,CAACF,MAAM,CAAC;AACrB,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAIC,aAAa,IAAK;EAC7C,MAAMC,KAAK,GAAGT,MAAM,CAACU,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACN,EAAE,KAAKG,aAAa,CAACH,EAAE,CAAC;EAChE,IAAII,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBT,MAAM,CAACS,KAAK,CAAC,GAAGD,aAAa;EAC/B;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,YAAY,GAAIP,EAAE,IAAK;EAClCL,MAAM,GAAGA,MAAM,CAACa,MAAM,CAAET,MAAM,IAAKA,MAAM,CAACC,EAAE,KAAKA,EAAE,CAAC;AACtD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}