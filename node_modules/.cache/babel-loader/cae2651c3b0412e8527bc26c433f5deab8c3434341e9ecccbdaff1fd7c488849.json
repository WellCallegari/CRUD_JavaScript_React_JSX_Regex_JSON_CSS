{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PersonForm from './components/PersonForm';\nimport PersonList from './components/PersonList';\nimport { addPerson, deletePerson, updatePerson } from './services/personService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [people, setPeople] = useState([]);\n  const handleAddPerson = person => {\n    const newPerson = addPerson(person); // Chama o serviço de adicionar pessoa\n    setPeople(prevPeople => [...prevPeople, newPerson]); // Atualiza o estado\n  };\n  const handleEditPerson = (id, updatedPerson) => {\n    updatePerson(updatedPerson); // Atualiza a pessoa\n    setPeople(people.map(person => person.id === id ? {\n      ...person,\n      ...updatedPerson\n    } : person));\n  };\n  const handleDeletePerson = id => {\n    if (window.confirm('Você tem certeza que deseja excluir esta pessoa?')) {\n      deletePerson(id); // Chama o serviço de deletar\n      setPeople(people.filter(person => person.id !== id)); // Atualiza o estado\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastro de Pessoas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      onAdd: handleAddPerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonList, {\n      people: people,\n      onEdit: handleEditPerson,\n      onDelete: handleDeletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QznwlLpyGnQEJtA3lYfueAtPpXk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PersonForm","PersonList","addPerson","deletePerson","updatePerson","jsxDEV","_jsxDEV","App","_s","people","setPeople","handleAddPerson","person","newPerson","prevPeople","handleEditPerson","id","updatedPerson","map","handleDeletePerson","window","confirm","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PersonForm from './components/PersonForm';\nimport PersonList from './components/PersonList';\nimport { addPerson, deletePerson, updatePerson } from './services/personService';\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n\n  const handleAddPerson = (person) => {\n    const newPerson = addPerson(person); // Chama o serviço de adicionar pessoa\n    setPeople((prevPeople) => [...prevPeople, newPerson]); // Atualiza o estado\n  };\n\n  const handleEditPerson = (id, updatedPerson) => {\n    updatePerson(updatedPerson); // Atualiza a pessoa\n    setPeople(people.map(person => person.id === id ? { ...person, ...updatedPerson } : person));\n  };\n\n  const handleDeletePerson = (id) => {\n    if (window.confirm('Você tem certeza que deseja excluir esta pessoa?')) {\n      deletePerson(id); // Chama o serviço de deletar\n      setPeople(people.filter(person => person.id !== id)); // Atualiza o estado\n    }\n  };\n\n  return (\n    <div>\n      <h1>Cadastro de Pessoas</h1>\n      <PersonForm onAdd={handleAddPerson} />\n      <PersonList \n        people={people} \n        onEdit={handleEditPerson} \n        onDelete={handleDeletePerson} \n      />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,SAAS,EAAEC,YAAY,EAAEC,YAAY,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,eAAe,GAAIC,MAAM,IAAK;IAClC,MAAMC,SAAS,GAAGX,SAAS,CAACU,MAAM,CAAC,CAAC,CAAC;IACrCF,SAAS,CAAEI,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAED,SAAS,CAAC,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAACC,EAAE,EAAEC,aAAa,KAAK;IAC9Cb,YAAY,CAACa,aAAa,CAAC,CAAC,CAAC;IAC7BP,SAAS,CAACD,MAAM,CAACS,GAAG,CAACN,MAAM,IAAIA,MAAM,CAACI,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGJ,MAAM;MAAE,GAAGK;IAAc,CAAC,GAAGL,MAAM,CAAC,CAAC;EAC9F,CAAC;EAED,MAAMO,kBAAkB,GAAIH,EAAE,IAAK;IACjC,IAAII,MAAM,CAACC,OAAO,CAAC,kDAAkD,CAAC,EAAE;MACtElB,YAAY,CAACa,EAAE,CAAC,CAAC,CAAC;MAClBN,SAAS,CAACD,MAAM,CAACa,MAAM,CAACV,MAAM,IAAIA,MAAM,CAACI,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD;EACF,CAAC;EAED,oBACEV,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BrB,OAAA,CAACN,UAAU;MAAC4B,KAAK,EAAEjB;IAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCrB,OAAA,CAACL,UAAU;MACTQ,MAAM,EAAEA,MAAO;MACfoB,MAAM,EAAEd,gBAAiB;MACzBe,QAAQ,EAAEX;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/BID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}