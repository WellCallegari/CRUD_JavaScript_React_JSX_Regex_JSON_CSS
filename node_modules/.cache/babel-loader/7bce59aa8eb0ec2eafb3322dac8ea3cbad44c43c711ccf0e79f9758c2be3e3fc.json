{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\Final\\\\2\\\\crud-pessoas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\n\n// Função para gerar uma cor aleatória\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\nconst App = () => {\n  _s();\n  const [people, setPeople] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    birthdate: '',\n    id: null\n  });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  const [viewType, setViewType] = useState('card'); // Estado para controlar a visualização (card ou lista)\n\n  // Função de validação\n  const validateForm = () => {\n    let formErrors = {};\n    const {\n      name,\n      email,\n      birthdate\n    } = formData;\n    if (!name) formErrors.name = 'Nome é obrigatório!';\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) formErrors.email = 'E-mail inválido!';\n    if (!birthdate) formErrors.birthdate = 'Data de nascimento é obrigatória!';\n    return formErrors;\n  };\n\n  // Função para lidar com o envio do formulário\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length === 0) {\n      if (formData.id) {\n        // Caso tenha ID, estamos editando a pessoa\n        const updatedPeople = people.map(person => person.id === formData.id ? {\n          ...formData\n        } : person);\n        setPeople(updatedPeople);\n        setShowForm(false);\n      } else {\n        // Caso não tenha ID, estamos cadastrando uma nova pessoa\n        setPeople([...people, {\n          ...formData,\n          id: Date.now(),\n          color: generateRandomColor()\n        }]);\n        setSuccessMessage('Pessoa cadastrada com sucesso!');\n        setTimeout(() => setSuccessMessage(''), 3000); // Limpa a mensagem após 3 segundos\n        setFormData({\n          name: '',\n          email: '',\n          birthdate: '',\n          id: null\n        });\n      }\n      setErrors({}); // Limpa os erros após o envio bem-sucedido\n    } else {\n      setErrors(validationErrors); // Exibe os erros\n    }\n  };\n\n  // Função para manipular as mudanças no formulário\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Função para alternar entre visualização em lista e cards\n  const toggleView = () => {\n    setViewType(viewType === 'card' ? 'list' : 'card');\n  };\n\n  // Função para exibir o formulário de cadastro\n  const handleCreate = () => {\n    setShowForm(true);\n    setFormData({\n      name: '',\n      email: '',\n      birthdate: '',\n      id: null\n    });\n    setErrors({}); // Limpar os erros ao criar um novo cadastro\n  };\n\n  // Função para editar a pessoa\n  const handleEdit = id => {\n    const personToEdit = people.find(person => person.id === id);\n    setFormData({\n      ...personToEdit\n    });\n    setShowForm(true);\n  };\n\n  // Função para excluir a pessoa\n  const handleDelete = id => {\n    const confirmDelete = window.confirm('Tem certeza que deseja excluir?');\n    if (confirmDelete) {\n      setPeople(people.filter(person => person.id !== id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"animated-title\",\n        children: \"Desafio Front-end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"animated-subtitle\",\n        children: \"Cadastro e listagem de pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        className: \"create-btn\",\n        children: \"Novo Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleView,\n        className: \"list-btn\",\n        children: viewType === 'card' ? 'Ver Lista' : 'Ver Cards'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 26\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: formData.id ? 'Editar Pessoa' : 'Cadastrar Pessoa'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nome:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-balloon\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"E-mail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-balloon\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data de Nascimento:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"birthdate\",\n            value: formData.birthdate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), errors.birthdate && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-balloon\",\n            children: errors.birthdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"create-btn\",\n          children: formData.id ? 'Atualizar' : 'Cadastrar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), people.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"N\\xE3o h\\xE1 pessoas cadastradas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: viewType === 'card' ? 'cards-conteiner' : 'list-view',\n        children: people.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: viewType === 'card' ? 'card' : 'list-item',\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: person.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: person.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(person.birthdate + 'T00:00:00').toLocaleDateString('pt-BR')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-btn-space\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-btn\",\n              onClick: () => handleEdit(person.id),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: () => handleDelete(person.id),\n              children: \"Excluir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)]\n        }, person.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cl1Ff3GBpOwtyTu9gjZWrma31i8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","generateRandomColor","letters","color","i","Math","floor","random","App","_s","people","setPeople","showForm","setShowForm","formData","setFormData","name","email","birthdate","id","errors","setErrors","successMessage","setSuccessMessage","viewType","setViewType","validateForm","formErrors","test","handleSubmit","e","preventDefault","validationErrors","Object","keys","length","updatedPeople","map","person","Date","now","setTimeout","handleChange","value","target","prevData","toggleView","handleCreate","handleEdit","personToEdit","find","handleDelete","confirmDelete","window","confirm","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/Final/2/crud-pessoas/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// Função para gerar uma cor aleatória\nconst generateRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({ name: '', email: '', birthdate: '', id: null });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  const [viewType, setViewType] = useState('card'); // Estado para controlar a visualização (card ou lista)\n\n  // Função de validação\n  const validateForm = () => {\n    let formErrors = {};\n    const { name, email, birthdate } = formData;\n\n    if (!name) formErrors.name = 'Nome é obrigatório!';\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) formErrors.email = 'E-mail inválido!';\n    if (!birthdate) formErrors.birthdate = 'Data de nascimento é obrigatória!';\n\n    return formErrors;\n  };\n\n  // Função para lidar com o envio do formulário\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const validationErrors = validateForm();\n\n    if (Object.keys(validationErrors).length === 0) {\n      if (formData.id) {\n        // Caso tenha ID, estamos editando a pessoa\n        const updatedPeople = people.map((person) =>\n          person.id === formData.id ? { ...formData } : person\n        );\n        setPeople(updatedPeople);\n        setShowForm(false);\n      } else {\n        // Caso não tenha ID, estamos cadastrando uma nova pessoa\n        setPeople([...people, { ...formData, id: Date.now(), color: generateRandomColor() }]);\n        setSuccessMessage('Pessoa cadastrada com sucesso!');\n        setTimeout(() => setSuccessMessage(''), 3000); // Limpa a mensagem após 3 segundos\n        setFormData({ name: '', email: '', birthdate: '', id: null });\n      }\n      setErrors({}); // Limpa os erros após o envio bem-sucedido\n    } else {\n      setErrors(validationErrors); // Exibe os erros\n    }\n  };\n\n  // Função para manipular as mudanças no formulário\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  // Função para alternar entre visualização em lista e cards\n  const toggleView = () => {\n    setViewType(viewType === 'card' ? 'list' : 'card');\n  };\n\n  // Função para exibir o formulário de cadastro\n  const handleCreate = () => {\n    setShowForm(true);\n    setFormData({ name: '', email: '', birthdate: '', id: null });\n    setErrors({}); // Limpar os erros ao criar um novo cadastro\n  };\n\n  // Função para editar a pessoa\n  const handleEdit = (id) => {\n    const personToEdit = people.find((person) => person.id === id);\n    setFormData({ ...personToEdit });\n    setShowForm(true);\n  };\n\n  // Função para excluir a pessoa\n  const handleDelete = (id) => {\n    const confirmDelete = window.confirm('Tem certeza que deseja excluir?');\n    if (confirmDelete) {\n      setPeople(people.filter((person) => person.id !== id));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header-container\">\n        <h1 className=\"animated-title\">Desafio Front-end</h1>\n        <p className=\"animated-subtitle\">Cadastro e listagem de pessoas</p>\n      </div>\n\n      <div className=\"buttons-container\">\n        <button onClick={handleCreate} className=\"create-btn\">\n          Novo Cadastro\n        </button>\n        <button onClick={toggleView} className=\"list-btn\">\n          {viewType === 'card' ? 'Ver Lista' : 'Ver Cards'}\n        </button>\n      </div>\n\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\n\n      {showForm && (\n        <div className=\"form-container\">\n          <h2>{formData.id ? 'Editar Pessoa' : 'Cadastrar Pessoa'}</h2>\n          <form onSubmit={handleSubmit}>\n            <div className=\"input-container\">\n              <label>Nome:</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n              />\n              {errors.name && <div className=\"error-balloon\">{errors.name}</div>}\n            </div>\n            <div className=\"input-container\">\n              <label>E-mail:</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n              />\n              {errors.email && <div className=\"error-balloon\">{errors.email}</div>}\n            </div>\n            <div className=\"input-container\">\n              <label>Data de Nascimento:</label>\n              <input\n                type=\"date\"\n                name=\"birthdate\"\n                value={formData.birthdate}\n                onChange={handleChange}\n              />\n              {errors.birthdate && <div className=\"error-balloon\">{errors.birthdate}</div>}\n            </div>\n            <button type=\"submit\" className=\"create-btn\">\n              {formData.id ? 'Atualizar' : 'Cadastrar'}\n            </button>\n          </form>\n        </div>\n      )}\n\n      {/* Exibição das pessoas conforme o tipo de visualização */}\n      <div className=\"list-container\">\n        <h2>Lista de Pessoas</h2>\n        {people.length === 0 ? (\n          <p>Não há pessoas cadastradas.</p>\n        ) : (\n          <div className={viewType === 'card' ? 'cards-conteiner' : 'list-view'}>\n            {people.map((person) => (\n              <div key={person.id} className={viewType === 'card' ? 'card' : 'list-item'}>\n                <p><strong>{person.name}</strong></p>\n                <p>{person.email}</p>\n                <p>{new Date(person.birthdate + 'T00:00:00').toLocaleDateString('pt-BR')}</p>\n                <div className=\"card-btn-space\">\n                  <button className=\"save-btn\" onClick={() => handleEdit(person.id)}>Editar</button>\n                  <button className=\"cancel-btn\" onClick={() => handleDelete(person.id)}>Excluir</button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}