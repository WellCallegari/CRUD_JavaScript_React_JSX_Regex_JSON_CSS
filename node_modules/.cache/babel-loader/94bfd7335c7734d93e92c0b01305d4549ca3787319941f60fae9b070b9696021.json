{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport PersonList from './components/PersonList';\nimport * as PersonServices from './services/PersonServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [people, setPeople] = useState([]);\n  const [editingPerson, setEditingPerson] = useState(null);\n\n  // Carrega as pessoas ao iniciar o aplicativo\n  useEffect(() => {\n    setPeople(PersonServices.getAllPeople());\n  }, []);\n\n  // Função para salvar (criar ou editar)\n  const handleSave = person => {\n    if (person.id) {\n      PersonServices.updatePerson(person);\n    } else {\n      PersonServices.addPerson(person);\n    }\n    setPeople(PersonServices.getAllPeople());\n    setEditingPerson(null);\n  };\n\n  // Função para editar uma pessoa\n  const handleEdit = person => {\n    setEditingPerson(person);\n  };\n\n  // Função para deletar uma pessoa\n  const handleDelete = id => {\n    PersonServices.deletePerson(id);\n    setPeople(PersonServices.getAllPeople());\n    setEditingPerson(null);\n  };\n\n  // Função para limpar o formulário\n  const handleClear = () => {\n    setEditingPerson(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD de Pessoas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      person: editingPerson,\n      onSave: handleSave,\n      onClear: handleClear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonList, {\n      people: people,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+f6MSG3vi+wsFMH1/Vn3oOXj/3I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PersonForm","PersonList","PersonServices","jsxDEV","_jsxDEV","App","_s","people","setPeople","editingPerson","setEditingPerson","getAllPeople","handleSave","person","id","updatePerson","addPerson","handleEdit","handleDelete","deletePerson","handleClear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onClear","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport PersonList from './components/PersonList';\nimport * as PersonServices from './services/PersonServices';\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n  const [editingPerson, setEditingPerson] = useState(null);\n\n  // Carrega as pessoas ao iniciar o aplicativo\n  useEffect(() => {\n    setPeople(PersonServices.getAllPeople());\n  }, []);\n\n  // Função para salvar (criar ou editar)\n  const handleSave = (person) => {\n    if (person.id) {\n      PersonServices.updatePerson(person);\n    } else {\n      PersonServices.addPerson(person);\n    }\n    setPeople(PersonServices.getAllPeople());\n    setEditingPerson(null);\n  };\n\n  // Função para editar uma pessoa\n  const handleEdit = (person) => {\n    setEditingPerson(person);\n  };\n\n  // Função para deletar uma pessoa\n  const handleDelete = (id) => {\n    PersonServices.deletePerson(id);\n    setPeople(PersonServices.getAllPeople());\n    setEditingPerson(null);\n  };\n\n  // Função para limpar o formulário\n  const handleClear = () => {\n    setEditingPerson(null);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>CRUD de Pessoas</h1>\n      <PersonForm person={editingPerson} onSave={handleSave} onClear={handleClear} />\n      <PersonList people={people} onEdit={handleEdit} onDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,KAAKC,cAAc,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACdS,SAAS,CAACN,cAAc,CAACS,YAAY,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,UAAU,GAAIC,MAAM,IAAK;IAC7B,IAAIA,MAAM,CAACC,EAAE,EAAE;MACbZ,cAAc,CAACa,YAAY,CAACF,MAAM,CAAC;IACrC,CAAC,MAAM;MACLX,cAAc,CAACc,SAAS,CAACH,MAAM,CAAC;IAClC;IACAL,SAAS,CAACN,cAAc,CAACS,YAAY,CAAC,CAAC,CAAC;IACxCD,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMO,UAAU,GAAIJ,MAAM,IAAK;IAC7BH,gBAAgB,CAACG,MAAM,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMK,YAAY,GAAIJ,EAAE,IAAK;IAC3BZ,cAAc,CAACiB,YAAY,CAACL,EAAE,CAAC;IAC/BN,SAAS,CAACN,cAAc,CAACS,YAAY,CAAC,CAAC,CAAC;IACxCD,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBV,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACEN,OAAA;IAAKiB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BlB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBtB,OAAA,CAACJ,UAAU;MAACa,MAAM,EAAEJ,aAAc;MAACkB,MAAM,EAAEf,UAAW;MAACgB,OAAO,EAAER;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/EtB,OAAA,CAACH,UAAU;MAACM,MAAM,EAAEA,MAAO;MAACsB,MAAM,EAAEZ,UAAW;MAACa,QAAQ,EAAEZ;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACpB,EAAA,CA5CID,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}