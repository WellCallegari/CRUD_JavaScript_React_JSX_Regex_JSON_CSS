{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\components\\\\PersonForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { formatDateToBR, formatDateToISO } from '../services/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PersonForm = ({\n  person,\n  onSave\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    id: '',\n    name: '',\n    email: '',\n    birthdate: ''\n  });\n\n  // Quando o componente é carregado, formata a data para o padrão brasileiro\n  useEffect(() => {\n    if (person) {\n      setFormData({\n        id: person.id || '',\n        name: person.name || '',\n        email: person.email || '',\n        birthdate: person.birthdate ? formatDateToBR(person.birthdate) : ''\n      });\n    }\n  }, [person]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Converte a data para ISO apenas ao salvar\n    setFormData({\n      ...formData,\n      [name]: name === 'birthdate' ? formatDateToBR(value) : value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSave({\n      ...formData,\n      birthdate: formatDateToISO(formData.birthdate)\n    });\n    setFormData({\n      id: '',\n      name: '',\n      email: '',\n      birthdate: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Nome\",\n      value: formData.name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: formData.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"birthdate\",\n      placeholder: \"Data de Nascimento (dd/mm/yyyy)\",\n      value: formData.birthdate,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Salvar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(PersonForm, \"eUx1JkCCrfBFzVRs8C79VjnYBCw=\");\n_c = PersonForm;\nexport default PersonForm;\nvar _c;\n$RefreshReg$(_c, \"PersonForm\");","map":{"version":3,"names":["React","useState","useEffect","formatDateToBR","formatDateToISO","jsxDEV","_jsxDEV","PersonForm","person","onSave","_s","formData","setFormData","id","name","email","birthdate","handleChange","e","value","target","handleSubmit","preventDefault","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/components/PersonForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { formatDateToBR, formatDateToISO } from '../services/utils';\r\n\r\nconst PersonForm = ({ person, onSave }) => {\r\n  const [formData, setFormData] = useState({\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    birthdate: ''\r\n  });\r\n\r\n  // Quando o componente é carregado, formata a data para o padrão brasileiro\r\n  useEffect(() => {\r\n    if (person) {\r\n      setFormData({\r\n        id: person.id || '',\r\n        name: person.name || '',\r\n        email: person.email || '',\r\n        birthdate: person.birthdate ? formatDateToBR(person.birthdate) : ''\r\n      });\r\n    }\r\n  }, [person]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // Converte a data para ISO apenas ao salvar\r\n    setFormData({\r\n      ...formData,\r\n      [name]: name === 'birthdate' ? formatDateToBR(value) : value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSave({\r\n      ...formData,\r\n      birthdate: formatDateToISO(formData.birthdate)\r\n    });\r\n    setFormData({ id: '', name: '', email: '', birthdate: '' });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Nome\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"birthdate\"\r\n        placeholder=\"Data de Nascimento (dd/mm/yyyy)\"\r\n        value={formData.birthdate}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\">Salvar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}