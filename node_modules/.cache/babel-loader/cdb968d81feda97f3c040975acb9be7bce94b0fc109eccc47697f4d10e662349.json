{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YoGa\\\\Desktop\\\\Teste\\\\2\\\\crud-pessoas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { addPerson, updatePerson, deletePerson, getAllPeople } from './services/personService';\nimport PersonForm from './components/PersonForm';\nimport PersonList from './components/PersonList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [people, setPeople] = useState(getAllPeople()); // Estado para armazenar pessoas\n  const [personToEdit, setPersonToEdit] = useState(null); // Estado para armazenar a pessoa em edição\n\n  const handleSave = updatedPerson => {\n    if (updatedPerson.id) {\n      updatePerson(updatedPerson); // Atualiza a pessoa\n      setPeople([...people]); // Atualiza a lista de pessoas após edição\n      setPersonToEdit(null); // Limpa o estado de edição\n    } else {\n      addPerson(updatedPerson); // Adiciona uma nova pessoa\n      setPeople([...people]); // Atualiza a lista de pessoas após adição\n    }\n  };\n  const handleEdit = person => {\n    setPersonToEdit(person); // Define a pessoa a ser editada\n  };\n  const handleDelete = id => {\n    const confirmation = window.confirm(\"Você tem certeza que deseja excluir?\");\n    if (confirmation) {\n      deletePerson(id); // Exclui a pessoa\n      setPeople([...people]); // Atualiza a lista de pessoas após exclusão\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PersonForm, {\n      onSave: handleSave,\n      personToEdit: personToEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonList, {\n      people: people,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zu6IwQjWcQXyIlFcTIU7XnIw2Bs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","addPerson","updatePerson","deletePerson","getAllPeople","PersonForm","PersonList","jsxDEV","_jsxDEV","App","_s","people","setPeople","personToEdit","setPersonToEdit","handleSave","updatedPerson","id","handleEdit","person","handleDelete","confirmation","window","confirm","className","children","onSave","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/YoGa/Desktop/Teste/2/crud-pessoas/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { addPerson, updatePerson, deletePerson, getAllPeople } from './services/personService';\nimport PersonForm from './components/PersonForm';\nimport PersonList from './components/PersonList';\n\nfunction App() {\n  const [people, setPeople] = useState(getAllPeople()); // Estado para armazenar pessoas\n  const [personToEdit, setPersonToEdit] = useState(null); // Estado para armazenar a pessoa em edição\n\n  const handleSave = (updatedPerson) => {\n    if (updatedPerson.id) {\n      updatePerson(updatedPerson); // Atualiza a pessoa\n      setPeople([...people]); // Atualiza a lista de pessoas após edição\n      setPersonToEdit(null); // Limpa o estado de edição\n    } else {\n      addPerson(updatedPerson); // Adiciona uma nova pessoa\n      setPeople([...people]); // Atualiza a lista de pessoas após adição\n    }\n  };\n\n  const handleEdit = (person) => {\n    setPersonToEdit(person); // Define a pessoa a ser editada\n  };\n\n  const handleDelete = (id) => {\n    const confirmation = window.confirm(\"Você tem certeza que deseja excluir?\");\n    if (confirmation) {\n      deletePerson(id); // Exclui a pessoa\n      setPeople([...people]); // Atualiza a lista de pessoas após exclusão\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <PersonForm onSave={handleSave} personToEdit={personToEdit} />\n      <PersonList people={people} onEdit={handleEdit} onDelete={handleDelete} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,YAAY,EAAEC,YAAY,QAAQ,0BAA0B;AAC9F,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAACI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExD,MAAMe,UAAU,GAAIC,aAAa,IAAK;IACpC,IAAIA,aAAa,CAACC,EAAE,EAAE;MACpBf,YAAY,CAACc,aAAa,CAAC,CAAC,CAAC;MAC7BJ,SAAS,CAAC,CAAC,GAAGD,MAAM,CAAC,CAAC,CAAC,CAAC;MACxBG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,CAAC,MAAM;MACLb,SAAS,CAACe,aAAa,CAAC,CAAC,CAAC;MAC1BJ,SAAS,CAAC,CAAC,GAAGD,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,MAAMO,UAAU,GAAIC,MAAM,IAAK;IAC7BL,eAAe,CAACK,MAAM,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAIH,EAAE,IAAK;IAC3B,MAAMI,YAAY,GAAGC,MAAM,CAACC,OAAO,CAAC,sCAAsC,CAAC;IAC3E,IAAIF,YAAY,EAAE;MAChBlB,YAAY,CAACc,EAAE,CAAC,CAAC,CAAC;MAClBL,SAAS,CAAC,CAAC,GAAGD,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,oBACEH,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA,CAACH,UAAU;MAACqB,MAAM,EAAEX,UAAW;MAACF,YAAY,EAAEA;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9DtB,OAAA,CAACF,UAAU;MAACK,MAAM,EAAEA,MAAO;MAACoB,MAAM,EAAEb,UAAW;MAACc,QAAQ,EAAEZ;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV;AAACpB,EAAA,CAjCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}